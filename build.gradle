plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id 'com.palantir.git-version' version '3.0.0'
}

group 'io.github.pesegato'
version gitVersion()

println("version : '${version}'")

repositories {
    mavenCentral()
}

task javadocJar(type: Jar) {
    archiveClassifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

signing {
    sign publishing.publications
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            pom {
                name = 'Jungle'
                description = 'Environment support for jMonkeyEngine.'
                url = 'https://github.com/Pesegato/Jungle/'
                inceptionYear = '2022'
                licenses {
                    license {
                        name = 'BSD 3-Clause License'
                        url = 'https://github.com/Pesegato/Jungle/blob/main/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'pesegato'
                        name = 'Pesegato Ameiurus Melas'
                        email = 'pesegato@outlook.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/pesegato/jungle.git'
                    developerConnection = 'scm:git:ssh://git@github.com/pesegato/jungle.git'
                    url = 'https://github.com/Pesegato/Jungle/'
                }
            }
        }
    }
    repositories {
        maven {
            url "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = ossrhUsername
                password = ossrhPassword
            }
        }
    }
}
/*
publishing {
  repositories {
    maven {
      name = "GitHubPackages"
      url = "https://maven.pkg.github.com/Pesegato/Jungle"
      credentials {
        username = System.getenv("GITHUB_ACTOR")
        password = System.getenv("GITHUB_TOKEN")
      }
    }
  }
}
*/
ext {
    //jvm = org.gradle.internal.jvm.Jvm.current()
    javaVersion = JavaVersion.current()
    //jmeVersion = "3.3.2-stable"
    jmeVersion = "[3.3,)"
}

dependencies {
    implementation "org.jmonkeyengine:jme3-lwjgl3:$jmeVersion"
    implementation 'com.github.oshi:oshi-core:5.7.5'
    implementation 'org.slf4j:slf4j-api:1.7.21'
    implementation 'ch.qos.logback:logback-core:1.2.3'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

compileJava.doLast {
    def buildDate = new Date().format('yyyy-MM-dd HHmm')
    println "Writing ${rootProject.name}.build.date: " + buildDate
    destinationDirectory.file("${rootProject.name}.build.date").get().asFile.text = buildDate
    destinationDirectory.file("${rootProject.name}.build.version").get().asFile.text = "${version}"
}

test {
    useJUnitPlatform()
}
